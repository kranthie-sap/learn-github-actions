name: Build Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true
      - name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm modules
        run: pnpm install
      - name: Run build
        run: pnpm recursive run build
      # - name: Run linting
      #   run: pnpm recursive run lint
      # - name: Run unit tests
      #   run: pnpm recursive run test
  release-manual:
    # Run release job only on pushes to the main branch. The job depends on completion of the build job.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true
      - name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install pnpm modules
        run: pnpm install
      - name: Run build
        run: pnpm recursive run build
      - name: Setup npmrc with npmjs.com token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPMJS_TOKEN }}" > .npmrc
      - name: Create changesets versioning and publishing PR
        uses: changesets/action@master
        with:
          version: pnpm ci:version
          commit: 'chore: bump versions and publish to npmjs'
          title: 'chore: bump versions and publish to npmjs'
          publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  version-auto:
    # Run release job only on pushes to the main branch. The job depends on completion of the build job.
    if: ${{ false }} # github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    outputs:
      changes: ${{ steps.changesetVersion.outputs.changes }} # map step output to job output
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.ACTIONS_PAT }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true
      - name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install pnpm modules
        run: pnpm install
       - name: Apply changesets
        id: changesetVersion
        run: |
          echo ::set-output name=changes::$(pnpm ci:version 2>&1 | grep -q 'No unreleased changesets found' && echo 'false' || echo 'true')
          git status
      - name: Commit and push changes
        if: steps.changesetVersion.outputs.changes == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git status
          git add -A
          git status
          git commit -m "chore: apply latest changesets" || echo "No changes to commit"
          git log --pretty=oneline | head -n 10
          git push
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-auto:
    # Run release job only on pushes to the main branch. The job depends on completion of the build job.
    # This job needs to run after the version-auto commit has been merged - so check if that step returns 'false'
    if: ${{ false }} # github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.version-auto.outputs.changes == 'false'
    runs-on: ubuntu-latest
    needs: version-auto
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true
      - name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install pnpm modules
        run: pnpm install
      - name: Run build
        run: pnpm recursive run build
      - name: Setup npmrc with npmjs.com token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPMJS_TOKEN }}" > .npmrc
      - name: 'Publish to npmjs'
        uses: changesets/action@master
        with:
          publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT }}
